"""
通过面向对象的方法设计学生类Student，包含一个学生姓名(Name)、性别(Sex)、年龄(Age)，然后设计学生记录管理类StudentList来管理一组学生记录。

程序运行后显示">"的提示符号

在">"后面可以输入show、insert、update、delete等命令实现记录的显示、插入、修改、删除等功能 

执行一个命令后继续显示">"提示符号

如果输入exit就退出系统 

输入的命令不正确时会提示正确的输入命令
"""


class Student:
    def __init__(self):
        self.student_list = {}

    def show(self):
        print('{:16s}{:16s}{:8s}{:4s}'.format('No', 'Name', 'Gender', 'Age'))
        for key, value in self.student_list.items():
            print('{:16s}{:16s}{:8s}{:4s}'.format(str(key), str(value[0]), str(value[1]), str(value[2])))

    def insert(self, no, name, gender, age):
        if gender == '男' or gender == '女':
            self.student_list[no] = [name, gender, age]
            print("添加成功")
        else:
            print("性别输入错误")

    def update(self, no, name, gender, age):
        if gender == '男' or gender == '女':
            self.student_list[no] = [name, gender, age]
            print("修改成功")
        else:
            print("性别错误")

    def delete(self, no):
        if no in list(self.student_list.keys()):
            del self.student_list[no]
            print("删除成功")
        else:
            print("该学生不存在")

    def attempt(self):
        while True:
            a = input("> ")
            if a == 'insert':
                no = int(input('NO:'))
                if no in list(self.student_list.keys()):
                    print("这个序号已经存在")
                else:
                    name = input('Name:')
                    gender = input('Gender:')
                    age = input('Age:')
                    self.insert(no, name, gender, age)
            elif a == 'update':
                no = int(input('No:'))
                if no not in list(self.student_list.keys()):
                    print("该学生不存在")
                else:
                    name = input('Name:')
                    gender = input('Gender:')
                    age = input('Age:')
                    self.update(no, name, gender, age)
            elif a == 'delete':
                no = int(input('No:'))
                self.delete(no)
            elif a == 'show':
                self.show()
            elif a == 'exit':
                exit()
            else:
                print(
"""show   -> 查看表数据
insert -> 插入学生信息数据
update -> 更新学生信息数据
delete -> 删除学生信息数据""")


s1 = Student()
s1.attempt()
